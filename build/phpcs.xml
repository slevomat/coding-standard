<?xml version="1.0"?>
<ruleset name="Slevomat Coding Standard">
	<arg name="extensions" value="php"/>
	<arg name="tab-width" value="4"/>
	<arg value="s"/>
	<arg value="p"/>

	<rule ref="SlevomatCodingStandard">
		<exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>
		<exclude name="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment"/>
		<exclude name="SlevomatCodingStandard.ControlStructures.RequireYodaComparison"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants"/>
		<exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions"/>
	</rule>
	<rule ref="./phpcs-consistence.xml">
		<exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedIf"/><!-- Allow empty if statements - usually with a comment -->
		<exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedElseif"/><!-- Allow empty elseif statements - usually with a comment -->
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/><!-- Throws error with short type hint for integer and boolean -->
	</rule>

	<rule ref="Generic.Commenting.Todo"/>

	<rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming">
		<exclude-pattern>SlevomatCodingStandard/Sniffs/Namespaces/AbstractFullyQualifiedGlobalReference.php</exclude-pattern>
	</rule>
	<rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
		<properties>
			<property name="forbiddenAnnotations" type="array" value="
				@author,
				@created,
				@copyright,
				@license,
				@package,
				@throws,
				@version
			"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly">
		<exclude-pattern>SlevomatCodingStandard/Sniffs/Exceptions/ReferenceThrowableOnlySniff.php</exclude-pattern>
	</rule>
	<rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
		<properties>
			<property name="rootNamespaces" type="array" value="SlevomatCodingStandard=>SlevomatCodingStandard,tests=>SlevomatCodingStandard"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword">
		<properties>
			<property name="keywordsToCheck" type="array" value="T_EXTENDS,T_IMPLEMENTS"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
		<properties>
			<property name="namespacesRequiredToUse" type="array" value="SlevomatCodingStandard"/>
			<property name="fullyQualifiedKeywords" type="array" value="T_EXTENDS,T_IMPLEMENTS"/>
			<property name="allowFullyQualifiedExceptions" value="true"/>
			<property name="allowFullyQualifiedGlobalFunctions" value="true"/>
			<property name="allowFullyQualifiedGlobalConstants" value="true"/>
			<property name="allowPartialUses" value="false"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces">
		<properties>
			<property name="namespacesRequiredToUse" type="array" value="SlevomatCodingStandard"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
		<properties>
			<property name="enableObjectTypeHint" value="false"/>
			<property name="usefulAnnotations" type="array" value="
				@dataProvider
			"/>
		</properties>
	</rule>
</ruleset>
